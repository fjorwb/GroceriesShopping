openapi: 3.0.0
info:
  title: groceries-shopping
  contact: {}
  version: '1.1.1'
servers:
  - url: http://localhost:3000
    variables: {}
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: loginUser
      operationId: loginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/loginUserRequest'
                - example:
                    email: user3@email.com
                    password: secret
            example:
              email: user3@email.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/register:
    post:
      tags:
        - auth
      summary: registerUser
      operationId: registerUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/registerUserRequest'
                - example:
                    firstname: User
                    lastname: Five
                    username: userfive
                    email: user5@email.com
                    password: secret
                    address: 555 Fifth Ave
                    address2: Apt 55
                    city: Miami
                    state: FL
                    zip_code: '33136'
                    country: USA
                    phone: 555-555-5555
                    role: user
            example:
              firstname: User
              lastname: Five
              username: userfive
              email: user5@email.com
              password: secret
              address: 555 Fifth Ave
              address2: Apt 55
              city: Miami
              state: FL
              zip_code: '33136'
              country: USA
              phone: 555-555-5555
              role: user
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/changepassword?email={email}&password={password}&newpassword={newpassword}:
    get:
      tags:
        - auth
      summary: changePassword
      operationId: changePassword
      parameters:
        - name: email
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: newpassword
          in: query
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false

  /users:
    get:
      tags:
        - users
      summary: getAllUsers
      operationId: getAllUsers
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    post:
      tags:
        - users
      summary: createUser
      operationId: createUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/createUserRequest'
                - example:
                    firstname: pepito
                    lastname: perez
                    username: pepitoperez
                    email: pepito@email.com
                    password: secreto
                    address: 1234 Main St
                    address2: Apt 123
                    city: Washington DC
                    state: DC
                    zip_code: '20001'
                    country: USA
                    phone: 555-555-5555
                    role: user
            example:
              firstname: pepito
              lastname: perez
              username: pepitoperez
              email: pepito@email.com
              password: secreto
              address: 1234 Main St
              address2: Apt 123
              city: Washington DC
              state: DC
              zip_code: '20001'
              country: USA
              phone: 555-555-5555
              role: user
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /users/{id}:
    get:
      tags:
        - users
      summary: getUserById
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: user ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    put:
      tags:
        - users
      summary: updateUser
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: user ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/updateUserRequest'
                - example:
                    firstname: pepito
                    lastname: pepitez
                    username: pepito
                    password: secret
                    address: 111 First St
                    address2: Apt 2
                    city: Miami
                    State: FL
                    zip_code: 33136
                    country: USA
                    phone: 111-111-1111
            example:
              firstname: pepito
              lastname: pepitez
              username: pepito
              password: secret
              address: 111 First St
              address2: Apt 2
              city: Miami
              State: FL
              zip_code: 33136
              country: USA
              phone: 111-111-1111
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - users
      summary: deleteUser
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: user ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /menus:
    get:
      tags:
        - menus
      summary: getAllMenus
      operationId: getAllMenus
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    post:
      tags:
        - menus
      summary: createMenu
      operationId: createMenu
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/createMenuRequest'
                - example:
                    week: 1
                    date: 2021-01-02T00:00:00.000Z
                    meal: Lunch
                    recipe_id: 4
            example:
              week: 1
              date: 2021-01-02T00:00:00.000Z
              meal: Lunch
              recipe_id: 4
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /menus/{id}:
    get:
      tags:
        - menus
      summary: getMenuById
      operationId: getMenuById
      parameters:
        - name: id
          in: path
          description: menu ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    put:
      tags:
        - menus
      summary: updateMenu
      operationId: updateMenu
      parameters:
        - name: id
          in: path
          description: user ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/updateMenuRequest'
                - example:
                    week: 1
                    date: 2021-01-02T00:00:00.000Z
                    meal: Breakfast
                    recipe_id: 2
            example:
              week: 1
              date: 2021-01-02T00:00:00.000Z
              meal: Breakfast
              recipe_id: 2
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - menus
      summary: deleteMenu
      operationId: deleteMenu
      parameters:
        - name: id
          in: path
          description: menu ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /recipes:
    get:
      tags:
        - recipes
      summary: getAllRecipes
      operationId: getAllRecipes
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    post:
      tags:
        - recipes
      summary: createRecipe
      operationId: createRecipe
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/createRecipeRequest'
                - example:
                    title: Recipe 3
                    image: https://www.themealdb.com/images/media/meals/58oia61564916529.jpg
                    servings: 4
                    instructions: Instructions for Recipe 3
            example:
              title: Recipe 3
              image: https://www.themealdb.com/images/media/meals/58oia61564916529.jpg
              servings: 4
              instructions: Instructions for Recipe 3
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /recipes/{id}:
    get:
      tags:
        - recipes
      summary: getRecipeById
      operationId: getRecipeById
      parameters:
        - name: id
          in: path
          description: recipe ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    put:
      tags:
        - recipes
      summary: updateRecipe
      operationId: updateRecipe
      parameters:
        - name: id
          in: path
          description: menu ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/updateRecipeRequest'
                - example:
                    title: Recipe 333333
                    image: https://www.themealdb.com/images/media/meals/58oia61564916529.jpg
                    servings: 14
                    instructions: Instructions for Recipe dddd3
            example:
              title: Recipe 333333
              image: https://www.themealdb.com/images/media/meals/58oia61564916529.jpg
              servings: 14
              instructions: Instructions for Recipe dddd3
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - recipes
      summary: deleteRecipe
      operationId: deleteRecipe
      parameters:
        - name: id
          in: path
          description: menu ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /recipes/recipes?recipe={recipe}&cuisine={cuisine}:
    get:
      tags:
        - externalRecipes
      summary: getExternalRecipes
      operationId: getExternalRecipes
      parameters:
        - name: recipe
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: papa a la huancaina
        - name: cuisine
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: peruvian
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /recipes/recipes/{idext}:
    post:
      tags:
        - externalRecipes
      summary: createExternalRecipe
      operationId: createExternalRecipe
      parameters:
        - name: idext
          in: path
          description: ''
          required: true
          schema:
            type: string
            example: 52959
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /ingredients:
    get:
      tags:
        - ingredients
      summary: getAllIngredients
      operationId: getAllIngredients
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    post:
      tags:
        - ingredients
      summary: createIngredient
      operationId: createIngredient
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/createIngredientRequest'
                - example:
                    idext: 9
                    ingredients:
                      - name: beef
                        amount: 1
                        unit: lb
                    servings: 1
                    instructions: gril beef
            example:
              idext: 9
              ingredients:
                - name: beef
                  amount: 1
                  unit: lb
              servings: 1
              instructions: gril beef
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /ingredients/{id}:
    get:
      tags:
        - ingredients
      summary: getIngredientById
      operationId: getIngredientById
      parameters:
        - name: id
          in: path
          description: menu ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    put:
      tags:
        - ingredients
      summary: updateIngredient
      operationId: updateIngredient
      parameters:
        - name: id
          in: path
          description: menu ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/updateIngredientRequest'
                - example:
                    ingredients:
                      - name: pork
                        amount: 1
                        unit: lb
                      - name: salt
                        amount: 1
                        unit: serving
                      - name: soy sauce
                        amount: 2
                        unit: cup
                      - name: wayen
                        amount: 1
                        unit: teaspoon
                    servings: 1
                    instructions: gril pork
            example:
              ingredients:
                - name: pork
                  amount: 1
                  unit: lb
                - name: salt
                  amount: 1
                  unit: serving
                - name: soy sauce
                  amount: 2
                  unit: cup
                - name: wayen
                  amount: 1
                  unit: teaspoon
              servings: 1
              instructions: gril pork
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - ingredients
      summary: deleteIngredient
      operationId: deleteIngredient
      parameters:
        - name: id
          in: path
          description: menu ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /ingredients/external/{idext}:
    post:
      tags:
        - external ingredients
      summary: createExternalIngredient
      operationId: createExternalIngredient
      parameters:
        - name: idext
          in: path
          description: external id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /shoppinglists:
    get:
      tags:
        - shoppinglists
      summary: getAllShoppingLists
      operationId: getAllShoppingLists
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    post:
      tags:
        - shoppinglists
      summary: createShoppingList
      operationId: createShoppingList
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/createShoppingListRequest'
                - example:
                    barcode: '1234567890132'
                    quantity: 200
            example:
              barcode: '1234567890132'
              quantity: 200
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /shoppinglists/{id}:
    get:
      tags:
        - shoppinglists
      summary: getShoppingListById
      operationId: getShoppingListById
      parameters:
        - name: id
          in: path
          description: menu ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    put:
      tags:
        - shoppinglists
      summary: updateShoppingList
      operationId: updateShoppingList
      parameters:
        - name: id
          in: path
          description: menu ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/updateShoppingListRequest'
                - example:
                    quantity: 255
            example:
              quantity: 255
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - shoppinglists
      summary: deletShoppingList
      operationId: deletShoppingList
      parameters:
        - name: id
          in: path
          description: menu ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /markets:
    get:
      tags:
        - markets
      summary: getAllMarkets
      operationId: getAllMarkets
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    post:
      tags:
        - markets
      summary: createMarket
      operationId: createMarket
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/createMarketRequest'
                - example:
                    id: 4
                    name: Test Market 4
                    address: 444 Four Ave
                    city: West Van
                    state: BC
                    zip: V7T 1H8
                    country: Canada
                    phone: 123-456-4444
                    email: market4@market4.com
                    website: http://market4.com
                    password: password
            example:
              id: 4
              name: Test Market 4
              address: 444 Four Ave
              city: West Van
              state: BC
              zip: V7T 1H8
              country: Canada
              phone: 123-456-4444
              email: market4@market4.com
              website: http://market4.com
              password: password
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /markets/{id}:
    get:
      tags:
        - markets
      summary: getMarketById
      operationId: getMarketById
      parameters:
        - name: id
          in: path
          description: menu ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    put:
      tags:
        - markets
      summary: updateMarket
      operationId: updateMarket
      parameters:
        - name: id
          in: path
          description: menu ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/updateMarketRequest'
                - example:
                    name: Test Market 2
                    address: 222 Second St
                    city: Second City
                    state: MA
                    zip: '54321'
                    country: usa
                    phone: 123-456-2222
                    email: market222@market2.com
                    website: http://market222.com
                    password: password2
            example:
              name: Test Market 2
              address: 222 Second St
              city: Second City
              state: MA
              zip: '54321'
              country: usa
              phone: 123-456-2222
              email: market222@market2.com
              website: http://market222.com
              password: password2
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - markets
      summary: deleteMarket
      operationId: deleteMarket
      parameters:
        - name: id
          in: path
          description: menu ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /products:
    get:
      tags:
        - products
      summary: getAllProducts
      operationId: getAllProducts
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    post:
      tags:
        - products
      summary: createProduct
      operationId: createProduct
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/createProductRequest'
                - example:
                    barcode: 678912354
                    name: Product 4
                    description: Product 4 description
                    unit: Unit 4
                    presentation: Presentation 4
            example:
              barcode: 678912354
              name: Product 4
              description: Product 4 description
              unit: Unit 4
              presentation: Presentation 4
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /products/{id}:
    get:
      tags:
        - products
      summary: getProductById
      operationId: getProductById
      parameters:
        - name: id
          in: path
          description: menu ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    put:
      tags:
        - products
      summary: updateProduct
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          description: menu ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/updateProductRequest'
                - example:
                    barcode: 678912345
                    name: Product 4asdasd
                    description: Product 4444444 description
                    unit: Unit 44444
                    presentation: Presentation 4444444444444
            example:
              barcode: 678912345
              name: Product 4asdasd
              description: Product 4444444 description
              unit: Unit 44444
              presentation: Presentation 4444444444444
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - products
      summary: deleteProduct
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          description: menu ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
components:
  schemas:
    loginUserRequest:
      title: loginUserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: user3@email.com
        password: secret
    registerUserRequest:
      title: registerUserRequest
      required:
        - firstname
        - lastname
        - username
        - email
        - password
        - address
        - address2
        - city
        - state
        - zip_code
        - country
        - phone
        - role
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        zip_code:
          type: string
        country:
          type: string
        phone:
          type: string
        role:
          type: string
      example:
        firstname: User
        lastname: Five
        username: userfive
        email: user5@email.com
        password: secret
        address: 555 Fifth Ave
        address2: Apt 55
        city: Miami
        state: FL
        zip_code: '33136'
        country: USA
        phone: 555-555-5555
        role: user
    createExternalRecipeRequest:
      title: createExternalRecipeRequest
      required:
        - idext
        - ingredients
        - servings
        - instructions
      type: object
      properties:
        idext:
          type: integer
          format: int32
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
          description: ''
        servings:
          type: integer
          format: int32
        instructions:
          type: string
    Ingredient:
      title: Ingredient
      required:
        - idext
        - ingredient
        - amount
        - unit
      type: object
      properties:
        idext:
          type: integer
          format: int32
        ingredient:
          type: string
          nullable: true
        amount:
          oneOf:
            - type: integer
              format: int32
            - type: number
        unit:
          type: string
    ExternalIngredient:
      title: External Ingredient
      required:
        - idext
        - ingredient
        - amount
        - unit
      type: object
      properties:
        idext:
          type: integer
          format: int32
        ingredient:
          type: string
          nullable: true
        amount:
          oneOf:
            - type: integer
              format: int32
            - type: number
        unit:
          type: string

    updateExternalRecipeRequest:
      title: updateExternalRecipeRequest
      required:
        - idext
        - ingredients
        - servings
        - instructions
      type: object
      properties:
        idext:
          type: integer
          format: int32
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
          description: ''
        servings:
          type: integer
          format: int32
        instructions:
          type: string
    changePasswordRequest:
      title: changePasswordRequest
      required:
        - email
        - password
        - newpassword
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        newpassword:
          type: string
      example:
        email: user4@email.com
        password: secret
        newPassword: secret2
    createMarketRequest:
      title: createMarketRequest
      required:
        - id
        - name
        - address
        - city
        - state
        - zip
        - country
        - phone
        - email
        - website
        - password
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
        phone:
          type: string
        email:
          type: string
        website:
          type: string
        password:
          type: string
      example:
        id: 4
        name: Test Market 4
        address: 444 Four Ave
        city: West Van
        state: BC
        zip: V7T 1H8
        country: Canada
        phone: 123-456-4444
        email: market4@market4.com
        website: http://market4.com
        password: password
    updateMarketRequest:
      title: updateMarketRequest
      required:
        - name
        - address
        - city
        - state
        - zip
        - country
        - phone
        - email
        - website
        - password
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
        phone:
          type: string
        email:
          type: string
        website:
          type: string
        password:
          type: string
      example:
        id: 2
        name: Test Market 2
        address: 222 Second St
        city: Second City
        state: MA
        zip: '54321'
        country: usa
        phone: 123-456-2222
        email: market222@market2.com
        website: http://market222.com
        password: password2
    createMenuRequest:
      title: createMenuRequest
      required:
        - week
        - date
        - meal
        - recipe_id
      type: object
      properties:
        week:
          type: integer
          format: int32
        date:
          type: string
        meal:
          type: string
        recipe_id:
          type: integer
          format: int32
      example:
        week: 1
        date: 2021-01-02T00:00:00.000Z
        meal: Lunch
        recipe_id: 4
    updateMenuRequest:
      title: updateMenuRequest
      required:
        - week
        - date
        - meal
        - recipe_id
      type: object
      properties:
        week:
          type: integer
          format: int32
        date:
          type: string
        meal:
          type: string
        recipe_id:
          type: integer
          format: int32
      example:
        week: 1
        date: 2021-01-02T00:00:00.000Z
        meal: Breakfast
        recipe_id: 2
    createRecipeRequest:
      title: createRecipeRequest
      required:
        - title
        - image
        - servings
        - instructions
      type: object
      properties:
        title:
          type: string
        image:
          type: string
        servings:
          type: integer
          format: int32
        instructions:
          type: string
      example:
        title: Recipe 3
        image: https://www.themealdb.com/images/media/meals/58oia61564916529.jpg
        servings: 4
        instructions: Instructions for Recipe 3
    updateRecipeRequest:
      title: updateRecipeRequest
      required:
        - title
        - image
        - servings
        - instructions
      type: object
      properties:
        title:
          type: string
        image:
          type: string
        servings:
          type: integer
          format: int32
        instructions:
          type: string
      example:
        title: Recipe 333333
        image: https://www.themealdb.com/images/media/meals/58oia61564916529.jpg
        servings: 14
        instructions: Instructions for Recipe dddd3
    createProductRequest:
      title: createProductRequest
      required:
        - barcode
        - name
        - description
        - unit
        - presentation
      type: object
      properties:
        barcode:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        unit:
          type: string
        presentation:
          type: string
      example:
        barcode: 678912354
        name: Product 4
        description: Product 4 description
        unit: Unit 4
        presentation: Presentation 4
    updateProductRequest:
      title: updateProductRequest
      required:
        - barcode
        - name
        - description
        - unit
        - presentation
      type: object
      properties:
        barcode:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        unit:
          type: string
        presentation:
          type: string
      example:
        barcode: 678912345
        name: Product 4asdasd
        description: Product 4444444 description
        unit: Unit 44444
        presentation: Presentation 4444444444444
    createShoppingListRequest:
      title: createShoppingListRequest
      required:
        - barcode
        - quantity
      type: object
      properties:
        barcode:
          type: string
        quantity:
          type: integer
          format: int32
      example:
        barcode: '1234567890132'
        quantity: 200
    updateShoppingListRequest:
      title: updateShoppingListRequest
      required:
        - quantity
      type: object
      properties:
        quantity:
          type: integer
          format: int32
      example:
        quantity: 255
    createUserRequest:
      title: createUserRequest
      required:
        - firstname
        - lastname
        - username
        - email
        - password
        - address
        - address2
        - city
        - state
        - zip_code
        - country
        - phone
        - role
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        zip_code:
          type: string
        country:
          type: string
        phone:
          type: string
        role:
          type: string
      example:
        firstname: pepito
        lastname: perez
        username: pepitoperez
        email: pepito@email.com
        password: secreto
        address: 1234 Main St
        address2: Apt 123
        city: Washington DC
        state: DC
        zip_code: '20001'
        country: USA
        phone: 555-555-5555
        role: user
    updateUserRequest:
      title: updateUserRequest
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      example:
        firstname: pepito
        lastname: pepitez
        username: pepito
        password: secret
        address: 111 First St
        address2: Apt 2
        city: Miami
        State: FL
        zip_code: 33136
        country: USA
        phone: 111-111-1111
    createIngredientRequest:
      title: createIngredientRequest
      required:
        - idext
        - ingredients
        - servings
        - instructions
      type: object
      properties:
        idext:
          type: integer
          format: int32
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient2'
          description: ''
        servings:
          type: integer
          format: int32
        instructions:
          type: string
      example:
        idext: 9
        ingredients:
          - name: beef
            amount: 1
            unit: lb
        servings: 1
        instructions: gril beef
    createExternalIngredient:
      title: createExternalRecipeRequest
      required:
        - idext
        - ingredients
        - servings
        - instructions
      type: object
      properties:
        idext:
          type: integer
          format: int32
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/ExternalIngredient'
          description: ''
        servings:
          type: integer
          format: int32
        instructions:
          type: string
    Ingredient2:
      title: Ingredient2
      required:
        - name
        - amount
        - unit
      type: object
      properties:
        name:
          type: string
        amount:
          type: integer
          format: int32
        unit:
          type: string
      example:
        name: beef
        amount: 1
        unit: lb
    updateIngredientRequest:
      title: updateIngredientRequest
      required:
        - ingredients
        - servings
        - instructions
      type: object
      properties:
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient2'
          description: ''
        servings:
          type: integer
          format: int32
        instructions:
          type: string
      example:
        ingredients:
          - name: pork
            amount: 1
            unit: lb
          - name: salt
            amount: 1
            unit: serving
          - name: soy sauce
            amount: 2
            unit: cup
          - name: wayen
            amount: 1
            unit: teaspoon
        servings: 1
        instructions: gril pork
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: auth
  - name: users
  - name: menus
  - name: recipes
  - name: externalRecipes
  - name: ingredients
  - name: external ingredients
  - name: shoppinglists
  - name: markets
  - name: products
